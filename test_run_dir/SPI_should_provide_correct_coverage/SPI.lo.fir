FIRRTL version 1.2.0
circuit SPI :
  module SPI :
    input clock : Clock
    input reset : UInt<1>
    input io_cs : UInt<1> @[src/main/scala/SPI.scala 12:14]
    output io_sclk : UInt<1> @[src/main/scala/SPI.scala 12:14]
    output io_mosi : UInt<1> @[src/main/scala/SPI.scala 12:14]
    input io_miso : UInt<1> @[src/main/scala/SPI.scala 12:14]
    input io_cpol : UInt<1> @[src/main/scala/SPI.scala 12:14]
    input io_cpha : UInt<1> @[src/main/scala/SPI.scala 12:14]
    input io_dataIn : UInt<8> @[src/main/scala/SPI.scala 12:14]
    output io_dataOut : UInt<8> @[src/main/scala/SPI.scala 12:14]
    input io_transmit : UInt<1> @[src/main/scala/SPI.scala 12:14]
    output io_done : UInt<1> @[src/main/scala/SPI.scala 12:14]

    reg shiftRegMOSI : UInt<8>, clock with :
      reset => (UInt<1>("h0"), shiftRegMOSI) @[src/main/scala/SPI.scala 31:29]
    reg shiftRegMISO : UInt<8>, clock with :
      reset => (UInt<1>("h0"), shiftRegMISO) @[src/main/scala/SPI.scala 32:29]
    reg bitCounter : UInt<3>, clock with :
      reset => (UInt<1>("h0"), bitCounter) @[src/main/scala/SPI.scala 33:27]
    reg sclk : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sclk) @[src/main/scala/SPI.scala 34:21]
    node _io_mosi_T = bits(shiftRegMOSI, 7, 7) @[src/main/scala/SPI.scala 38:26]
    reg internalClock : UInt<1>, clock with :
      reset => (UInt<1>("h0"), internalClock) @[src/main/scala/SPI.scala 43:30]
    node _sclk_T = eq(internalClock, UInt<1>("h0")) @[src/main/scala/SPI.scala 45:13]
    node _GEN_0 = mux(io_cpol, _sclk_T, internalClock) @[src/main/scala/SPI.scala 44:17 45:10 47:10]
    reg state : UInt<2>, clock with :
      reset => (UInt<1>("h0"), state) @[src/main/scala/SPI.scala 52:22]
    reg clockDiv : UInt<4>, clock with :
      reset => (UInt<1>("h0"), clockDiv) @[src/main/scala/SPI.scala 55:25]
    node _clockDiv_T = add(clockDiv, UInt<1>("h1")) @[src/main/scala/SPI.scala 56:24]
    node _clockDiv_T_1 = tail(_clockDiv_T, 1) @[src/main/scala/SPI.scala 56:24]
    node _T = eq(clockDiv, UInt<1>("h0")) @[src/main/scala/SPI.scala 57:17]
    node _internalClock_T = eq(internalClock, UInt<1>("h0")) @[src/main/scala/SPI.scala 58:22]
    node _GEN_1 = mux(_T, _internalClock_T, internalClock) @[src/main/scala/SPI.scala 57:26 58:19 43:30]
    node _T_1 = eq(UInt<2>("h0"), state) @[src/main/scala/SPI.scala 62:17]
    node _T_2 = eq(io_cs, UInt<1>("h0")) @[src/main/scala/SPI.scala 64:33]
    node _T_3 = and(io_transmit, _T_2) @[src/main/scala/SPI.scala 64:24]
    node _GEN_2 = mux(_T_3, io_dataIn, shiftRegMOSI) @[src/main/scala/SPI.scala 64:46 65:22 31:29]
    node _GEN_3 = mux(_T_3, UInt<1>("h0"), shiftRegMISO) @[src/main/scala/SPI.scala 64:46 66:22 32:29]
    node _GEN_4 = mux(_T_3, UInt<1>("h0"), bitCounter) @[src/main/scala/SPI.scala 64:46 67:20 33:27]
    node _GEN_5 = mux(_T_3, UInt<2>("h1"), state) @[src/main/scala/SPI.scala 64:46 68:15 52:22]
    node _T_4 = eq(UInt<2>("h1"), state) @[src/main/scala/SPI.scala 62:17]
    node _samplingEdge_T = eq(sclk, UInt<1>("h0")) @[src/main/scala/SPI.scala 74:45]
    node samplingEdge = mux(io_cpha, sclk, _samplingEdge_T) @[src/main/scala/SPI.scala 74:29]
    node _shiftRegMOSI_T = bits(shiftRegMOSI, 6, 0) @[src/main/scala/SPI.scala 77:41]
    node _shiftRegMOSI_T_1 = cat(_shiftRegMOSI_T, UInt<1>("h0")) @[src/main/scala/SPI.scala 77:28]
    node _shiftRegMISO_T = bits(shiftRegMISO, 6, 0) @[src/main/scala/SPI.scala 80:41]
    node _shiftRegMISO_T_1 = cat(_shiftRegMISO_T, io_miso) @[src/main/scala/SPI.scala 80:28]
    node _bitCounter_T = add(bitCounter, UInt<1>("h1")) @[src/main/scala/SPI.scala 82:34]
    node _bitCounter_T_1 = tail(_bitCounter_T, 1) @[src/main/scala/SPI.scala 82:34]
    node _T_5 = eq(bitCounter, UInt<3>("h7")) @[src/main/scala/SPI.scala 83:25]
    node _GEN_6 = mux(_T_5, UInt<2>("h2"), state) @[src/main/scala/SPI.scala 83:48 84:17 52:22]
    node _GEN_7 = mux(samplingEdge, _shiftRegMOSI_T_1, shiftRegMOSI) @[src/main/scala/SPI.scala 75:26 77:22 31:29]
    node _GEN_8 = mux(samplingEdge, _shiftRegMISO_T_1, shiftRegMISO) @[src/main/scala/SPI.scala 75:26 80:22 32:29]
    node _GEN_9 = mux(samplingEdge, _bitCounter_T_1, bitCounter) @[src/main/scala/SPI.scala 75:26 82:20 33:27]
    node _GEN_10 = mux(samplingEdge, _GEN_6, state) @[src/main/scala/SPI.scala 52:22 75:26]
    node _T_6 = eq(UInt<2>("h2"), state) @[src/main/scala/SPI.scala 62:17]
    node _T_7 = eq(io_cs, UInt<1>("h1")) @[src/main/scala/SPI.scala 91:18]
    node _GEN_11 = mux(_T_7, UInt<2>("h0"), state) @[src/main/scala/SPI.scala 91:30 92:15 52:22]
    node _GEN_12 = mux(_T_7, UInt<1>("h0"), UInt<1>("h1")) @[src/main/scala/SPI.scala 90:15 91:30 93:17]
    node _GEN_13 = mux(_T_6, _GEN_12, UInt<1>("h0")) @[src/main/scala/SPI.scala 40:11 62:17]
    node _GEN_14 = mux(_T_6, _GEN_11, state) @[src/main/scala/SPI.scala 62:17 52:22]
    node _GEN_15 = mux(_T_4, _GEN_7, shiftRegMOSI) @[src/main/scala/SPI.scala 62:17 31:29]
    node _GEN_16 = mux(_T_4, _GEN_8, shiftRegMISO) @[src/main/scala/SPI.scala 62:17 32:29]
    node _GEN_17 = mux(_T_4, _GEN_9, bitCounter) @[src/main/scala/SPI.scala 62:17 33:27]
    node _GEN_18 = mux(_T_4, _GEN_10, _GEN_14) @[src/main/scala/SPI.scala 62:17]
    node _GEN_19 = mux(_T_4, UInt<1>("h0"), _GEN_13) @[src/main/scala/SPI.scala 40:11 62:17]
    node _GEN_20 = mux(_T_1, _GEN_2, _GEN_15) @[src/main/scala/SPI.scala 62:17]
    node _GEN_21 = mux(_T_1, _GEN_3, _GEN_16) @[src/main/scala/SPI.scala 62:17]
    node _GEN_22 = mux(_T_1, _GEN_4, _GEN_17) @[src/main/scala/SPI.scala 62:17]
    node _GEN_23 = mux(_T_1, _GEN_5, _GEN_18) @[src/main/scala/SPI.scala 62:17]
    node _GEN_24 = mux(_T_1, UInt<1>("h0"), _GEN_19) @[src/main/scala/SPI.scala 40:11 62:17]
    io_sclk <= sclk @[src/main/scala/SPI.scala 37:11]
    io_mosi <= _io_mosi_T @[src/main/scala/SPI.scala 38:11]
    io_dataOut <= shiftRegMISO @[src/main/scala/SPI.scala 39:14]
    io_done <= _GEN_24
    shiftRegMOSI <= mux(reset, UInt<8>("h0"), _GEN_20) @[src/main/scala/SPI.scala 31:{29,29}]
    shiftRegMISO <= mux(reset, UInt<8>("h0"), _GEN_21) @[src/main/scala/SPI.scala 32:{29,29}]
    bitCounter <= mux(reset, UInt<3>("h0"), _GEN_22) @[src/main/scala/SPI.scala 33:{27,27}]
    sclk <= mux(reset, UInt<1>("h0"), _GEN_0) @[src/main/scala/SPI.scala 34:{21,21}]
    internalClock <= mux(reset, UInt<1>("h0"), _GEN_1) @[src/main/scala/SPI.scala 43:{30,30}]
    state <= mux(reset, UInt<2>("h0"), _GEN_23) @[src/main/scala/SPI.scala 52:{22,22}]
    clockDiv <= mux(reset, UInt<4>("h0"), _clockDiv_T_1) @[src/main/scala/SPI.scala 55:{25,25} 56:12]
